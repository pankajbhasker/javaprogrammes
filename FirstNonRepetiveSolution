/*
1.Find out the first non-repeating character from the given array of String.
Ex:
Input : { "array", "apple", "rat", "character"}
Output: y,a,r,h

2. Write a program to print all possibilites to get the given number as mentioned below:
Given number is 3.
Output:
  1+1+1
  1+2
  2+1
*/

import java.util.*;

class FirstNonRepetiveSolution {
  
    final static int MAX_CHAR = 256;
 
    static void findFirstNonRepeating()
    {
        // inDLL[x] contains pointer to a DLL node if x is
        // present in DLL. If x is not present, then
        // inDLL[x] is NULL
        List<Character> inDLL = new ArrayList<Character>();
 
        // repeated[x] is true if x is repeated two or more
        // times. If x is not seen so far or x is seen only
        // once. then repeated[x] is false
        boolean[] repeated = new boolean[MAX_CHAR];
 
        // Let us consider following stream and see the
        // process
        String stream = "geeksforgeeksandgeeksquizfor";
        for (int i = 0; i < stream.length(); i++) {
            char x = stream.charAt(i);
            System.out.println("Reading " + x
                               + " from stream \n");
 
            // We process this character only if it has not
            // occurred or occurred only once. repeated[x]
            // is true if x is repeated twice or more.s
            if (!repeated[x]) {
                // If the character is not in DLL, then add
                // this at the end of DLL.
                if (!(inDLL.contains(x))) {
                    inDLL.add(x);
                }
                else // Otherwise remove this character from
                     // DLL
                {
                    inDLL.remove((Character)x);
                    repeated[x]
                        = true; // Also mark it as repeated
                }
            }
 
            // Print the current first non-repeating
            // character from stream
            if (inDLL.size() != 0) {
                System.out.print(
                    "First non-repeating character so far is ");
                System.out.println(inDLL.get(0));
            }
        }
    }
    
  public static char[] getFirstNonRepChars(List<String> list) {
    //System.out.println("List "+list);
    //provide your solution here
        Set<String> slist = new HashSet<>();

        char[] charArr =null;
      for(String element: list){
        
        Arrays.sort(element.toCharArray());
        char[] charArr =  new char[element.toCharArray().length];
        
        slist.add(element);
      
     }  
      System.out.println(slist);

    return null;
  }

  public static void main(String[] args) {
    char [] res = getFirstNonRepChars(Arrays.asList("array", "apple", "rat", "character"));
    
    if(Arrays.compare(res, new char[]{'y','a','r', 'h'}) == 0){
      System.out.println("Test Passed");
    } else {
      System.out.println("Test Failed");
    }
  }

}
